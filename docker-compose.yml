version: '2.0'
services:

  # Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        user: demetrisk
        uid: 1000
    image: application
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www/html/
    volumes:
      - ./:/var/www/html/
      - ./docker-data/php/laravel.ini:/usr/local/etc/php/conf.d/laravel.ini
    networks:
      - app-network

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html/
      - ./docker-data/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  # MySQL Service
  db:
    image: mysql:5.7.32
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker-data/mysql-data/:/var/lib/mysql/
      - ./docker-data/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  # Supervisor Service
  supervisor:
    image: application
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - ./:/var/www/html/
    depends_on:
      - app
      - webserver
    command: supervisord

  # Redis Service
  redis:
    image: redis:alpine
    restart: unless-stopped
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
